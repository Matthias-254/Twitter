name: CI/CD Pipeline with TDD (Laravel)

# **Continuous Integration**: On every push to the main branch, GitHub Actions will automatically: Install dependencies, Run tests using PHPUnit.

# Trigger pipelines on specific branches (dev, test, prod)
on:
  push:
    branches:
      - Apache
      - breeze-fix
      - Test
      - main
  pull_request:
    branches:
      - Apache
      - breeze-fix
      - Test
      - main


jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      # Step 1: Checkout Repository
      - uses: actions/checkout@v4
      # Step 2: Set Up PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      # Step 3: Ensure .env File Exists
      - name: Ensure .env File Exists
        run: |
          if [ ! -f .env ]; then
            if [ -f .env.example ]; then
              cp .env.example .env
            else
              echo "Missing .env.example file!"
              exit 1
            fi
          fi
      # Step 4: Install PHP Dependencies
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      # Step 5: Generate Application Key
      - name: Generate application key
        run: php artisan key:generate
      # Step 6: Set Directory Permissions
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      # Step 7: Create SQLite Database
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      # Step 8: Run PHPUnit Tests
      - name: Execute Tests (Unit and Feature Tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: sudo /etc/init.d/mysql start
             php artisan test
      # Step 9: Set Up Node.js
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Ensure Node.js 17 or higher
          
      # Step 10: Install Node Dependencies
      - name: Install NPM Dependencies
        run: npm install
      # Step 11: Build Frontend Assets
      - name: Build Assets
        run: npm run build  
      
          
  tdd-checks:
     runs-on: ubuntu-latest
     needs: laravel-tests
     steps:
      # **TDD Principle: Checking Failing Tests**
      # This step is a placeholder to enforce TDD, ensuring failing tests were written
      # and then fixed. In practice, you'd implement logic or require manual review
      # to confirm adherence to TDD principles.
      - name: Check for Resolved Tests
        run: |
          echo "Ensuring TDD principles are met..."
          
